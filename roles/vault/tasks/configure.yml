---
- name: Generate Vault config
  ansible.builtin.template:
    src: vault_config.hcl.j2
    dest: "{{ vault_config_file }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0640

- name: Copy OpenSSL Self-signed certificate
  ansible.builtin.copy:
    src: "vault.crt"
    dest: "{{ vault_tls_cert_file }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0640
  when: vault_tls_enabled | bool

- name: Copy OpenSSL Self-signed key
  ansible.builtin.copy:
    src: "vault.key"
    dest: "{{ vault_tls_key_file }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0640
  when: vault_tls_enabled | bool

- name: Copy CA certificate to trusted CA
  ansible.builtin.copy:
    src: "vault.crt"
    dest: "/usr/local/share/ca-certificates/vault.crt"
    owner: root
    group: root
    mode: '0644'
  when: vault_tls_enabled | bool

- name: Update trusted CA certificates
  ansible.builtin.command: update-ca-certificates
  register: update_ca_output
  changed_when: "'added new certificate' in update_ca_output.stdout"
  when: vault_tls_enabled | bool

- name: Generate systemd service
  ansible.builtin.template:
    src: vault.service.j2
    dest: /etc/systemd/system/vault.service
    mode: 0644

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable and start Vault service
  ansible.builtin.systemd:
    name: vault
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: Set Vault api and cluster configuration
  set_fact:
    vault_api_addr: "{{ 'https' if vault_tls_enabled | default(false) else 'http' }}://{{ ansible_host }}:{{ vault_api_port }}"
    vault_cluster_addr: "{{ 'https' if vault_tls_enabled | default(false) else 'http' }}://{{ ansible_host }}:{{ vault_cluster_port }}"
