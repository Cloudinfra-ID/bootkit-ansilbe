---
- name: Install dependencies (RedHat)
  ansible.builtin.package:
    name:
      - unzip
      - gnupg
      - openssl
    state: present
  when: ansible_os_family == 'RedHat'

- name: Install dependencies (Debian)
  ansible.builtin.package:
    name:
      - unzip
      - gnupg
      - openssl
    state: present
  when: ansible_os_family == 'Debian'

- name: Ensure Etcd temp directory is clean
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/tmp/etcd-{{ etcd_version }}-linux-{{ etcd_arch }}.tar.gz"
    - "/tmp/etcd-tmp"

- name: Create Etcd temp directory
  file:
    path: /tmp/etcd-tmp
    state: directory
    mode: '0755'

- name: Download Etcd pre-compiled binaries
  ansible.builtin.get_url:
    url: "{{ etcd_download_url }}/{{ etcd_version }}/etcd-{{ etcd_version }}-linux-{{ etcd_arch }}.tar.gz"
    dest: "/tmp/etcd-{{ etcd_version }}-linux-{{ etcd_arch }}.tar.gz"
    mode: '0644'

- name: Extract Etcd archive
  ansible.builtin.unarchive:
    src: "/tmp/etcd-{{ etcd_version }}-linux-{{ etcd_arch }}.tar.gz"
    dest: "/tmp/etcd-tmp"
    remote_src: yes
    extra_opts:
      - --strip-components=1
      - --no-same-owner

- name: Install Etcd binaries
  copy:
    remote_src: yes
    src: "/tmp/etcd-tmp/{{ item }}"
    dest: "{{ etcd_install_dir }}/{{ item }}"
    mode: '0755'
    owner: root
    group: root
  loop:
    - etcd
    - etcdctl
    - etcdutl

- name: Create Etcd group
  ansible.builtin.group:
    name: "{{ etcd_group }}"
    state: present
    system: yes

- name: Create Etcd user
  ansible.builtin.user:
    name: "{{ etcd_user }}"
    group: "{{ etcd_group }}"
    system: yes
    shell: /sbin/nologin
    create_home: no

- name: Create Etcd directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ etcd_user }}"
    group: "{{ etcd_group }}"
    mode: '0750'
  loop:
    - "{{ etcd_data_dir }}"
    - "{{ etcd_config_dir }}"
    - "{{ etcd_ssl_dir }}"